10号

今天看了《PHP和MySQL.Web开发原书第4版》前面68p
收货：
1、register_globals配置参数，以前没有太在意。今天看了，才觉得又有一个更多的了解。
简短风格：$abc
中等风格：$_GET['abc']
冗长风格：$HTTP_GET_VARS['abc']
据说最后这个冗长的风格后面要禁用了，现在可以通过这个参数禁用：register_long_arrays
2、超级全局变量，以前只是比较了解$GLOBALS,$_SERVER,$_GET,$_POST,$_COOKIE,$_FILES,$_ENV,$_REQUEST,$_SESSION这些变量里面的几个。
经常使用的，如$GLOBALS,$_SERVER,$_GET,$_POST,$_COOKIE,$_FILES,$_REQUEST,$_SESSION。但是都不是特别熟悉，只是使用的时候才了解哈，这次看到说$_REQUEST包括$_GET,$_POST和$_COOKIE，没有具体去了解过。下来再看看吧。
3、操作符&，在对象形成关联之后，怎么取消关联
$a=5;
$b=&$a;
$a=7;//这个时候，变量$a和$b都是7了
怎么取消他们的，方法就是unset($b),就可以，现在$b=10
但是$a还是等于5
4、参数track_errors开启为on,程序中的错误就不会直接输出，而是保存到变量$php_errormsg中
5、执行操作符
`命令行 参数`
如：$out=`dir c:`;
echo $out;
6、函数:gettype()和settype()
还有检测变量类型的函数：is_array(),is_double(),is_float()等
还有几个不熟悉的函数：
is_scalar():检查变量是否是标量，即，一个整数、布尔值、字符串或浮点数
is_callable():检查变量是否是有效的函数名称
7、条件分支语句：if-else和switch
if-else只能执行一个语句段
而switch可能执行多个语句段
8、declare控制结构
declare(directive)
{
//block
}
指令：ticks,可以设置ticks=n,来控制每隔n行代码运行特定的函数


11号

预读第二章，文件操作部分
文件操作函数fpoen和fclose
fwrite和fread

还有字符流处理函数file_put_contents
相反的函数有file_get_contents
85p，引出数据库比文件保存更为安全

12号

上午去逛了一圈回来，本来是想去检查哈皮肤科的，结果华西的卡没有带，只有改天去了。
路上看到人和酒店搬迁，处理电视，桌子，椅子，还有很多其他电器，想买，反正家里面空，需要一些家具吧。
不想买新的，因为本来就是旧房子，也没有装修，就买一些旧家具将就吧，以后装修了，再说吧。
先学习一个小时吧，再弄饭吃。
今天学习第三章，数组

看了一下数组，感觉，有新的认识了
数组的排序
sort()只是一般的排序
asort()和ksort()是关联数组排序
这三个是按照升序排的
还有三个对应的按照降序排的函数
rsort()、arsort()、krsort()
还有一个自定义排序方式的函数：usort()以前没有注意到呢。
p96

刚刚添加了一个远程提交，保存本地秘钥，不再提示输入的本地设置
[redential]
	helper = store

现在来测试一下，看看是不是，可以不用再输入秘钥了
测试失败

换一个方法吧，继续测试其他方法
在“我的电脑”设置用户变量HOME
值是：%USERPROFILE%
然后再在%USERPROFILE%目录新建一个文件保存登录信息
文件名：_netrc，没有后缀
内容是
machine 服务器域名
login 用户名
password 密码了
测试通过。
但是这样太危险，密码是暴露的


睡一个午觉起来，感觉好多了。
要不然，下午整个精神不好。
继续吧

感觉整个usort()函数用来比较数组确实不错，以前都没有了解过呢
使用方法就是，必须用户自己创建一个函数
在这个函数里面定义好比较的规则，然后使用usort来调用
给出一个简单的示例
function compare($x, $y){
	if($x[1] == $y[1]){
		return 0;
	}else if($x[1]<$y[1]){
		return -1;
	}else{
		return 1;
	}
}

调用的时候是这样写的：
usort($products, 'compare');
说明，由于usort函数只有一个，没有对应的相反的函数，所以需要反向比较，就要把compare函数再做一个，如reverse_compare
function reverse_compare($x, $y){
	if($x[2] == $y[2]){
		return 0;
	}else if($x[2] < $y[2]){
		return 1;
	}else{
		return -1;
	}
}
这个写出来的就是按照降序排了
usort($products, 'reverse_compare');

重复执行某个操作到数组的每个元素的函数array_walk();

统计数组函数
count(),sizeof(),array_count_values()
最后一个函数以前没有注意到
这个函数可以分别统计数组里面的值出现的次数，呵呵，这个功能比较好。

extract()函数，以前看到过，但是从来没有仔细去看过它是做什么，只是大概知道。

extract()函数的后面参数，特别是第2和3个
可以设置不一样的使用方法
