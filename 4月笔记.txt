10号

今天看了《PHP和MySQL.Web开发原书第4版》前面68p
收货：
1、register_globals配置参数，以前没有太在意。今天看了，才觉得又有一个更多的了解。
简短风格：$abc
中等风格：$_GET['abc']
冗长风格：$HTTP_GET_VARS['abc']
据说最后这个冗长的风格后面要禁用了，现在可以通过这个参数禁用：register_long_arrays
2、超级全局变量，以前只是比较了解$GLOBALS,$_SERVER,$_GET,$_POST,$_COOKIE,$_FILES,$_ENV,$_REQUEST,$_SESSION这些变量里面的几个。
经常使用的，如$GLOBALS,$_SERVER,$_GET,$_POST,$_COOKIE,$_FILES,$_REQUEST,$_SESSION。但是都不是特别熟悉，只是使用的时候才了解哈，这次看到说$_REQUEST包括$_GET,$_POST和$_COOKIE，没有具体去了解过。下来再看看吧。
3、操作符&，在对象形成关联之后，怎么取消关联
$a=5;
$b=&$a;
$a=7;//这个时候，变量$a和$b都是7了
怎么取消他们的，方法就是unset($b),就可以，现在$b=10
但是$a还是等于5
4、参数track_errors开启为on,程序中的错误就不会直接输出，而是保存到变量$php_errormsg中
5、执行操作符
`命令行 参数`
如：$out=`dir c:`;
echo $out;
6、函数:gettype()和settype()
还有检测变量类型的函数：is_array(),is_double(),is_float()等
还有几个不熟悉的函数：
is_scalar():检查变量是否是标量，即，一个整数、布尔值、字符串或浮点数
is_callable():检查变量是否是有效的函数名称
7、条件分支语句：if-else和switch
if-else只能执行一个语句段
而switch可能执行多个语句段
8、declare控制结构
declare(directive)
{
//block
}
指令：ticks,可以设置ticks=n,来控制每隔n行代码运行特定的函数


11号

预读第二章，文件操作部分
文件操作函数fpoen和fclose
fwrite和fread

还有字符流处理函数file_put_contents
相反的函数有file_get_contents
85p，引出数据库比文件保存更为安全

12号

上午去逛了一圈回来，本来是想去检查哈皮肤科的，结果华西的卡没有带，只有改天去了。
路上看到人和酒店搬迁，处理电视，桌子，椅子，还有很多其他电器，想买，反正家里面空，需要一些家具吧。
不想买新的，因为本来就是旧房子，也没有装修，就买一些旧家具将就吧，以后装修了，再说吧。
先学习一个小时吧，再弄饭吃。
今天学习第三章，数组

看了一下数组，感觉，有新的认识了
数组的排序
sort()只是一般的排序
asort()和ksort()是关联数组排序
这三个是按照升序排的
还有三个对应的按照降序排的函数
rsort()、arsort()、krsort()
还有一个自定义排序方式的函数：usort()以前没有注意到呢。
p96

刚刚添加了一个远程提交，保存本地秘钥，不再提示输入的本地设置
[redential]
	helper = store

现在来测试一下，看看是不是，可以不用再输入秘钥了
测试失败

换一个方法吧，继续测试其他方法
在“我的电脑”设置用户变量HOME
值是：%USERPROFILE%
然后再在%USERPROFILE%目录新建一个文件保存登录信息
文件名：_netrc，没有后缀
内容是
machine 服务器域名
login 用户名
password 密码了
测试通过。
但是这样太危险，密码是暴露的


睡一个午觉起来，感觉好多了。
要不然，下午整个精神不好。
继续吧

感觉整个usort()函数用来比较数组确实不错，以前都没有了解过呢
使用方法就是，必须用户自己创建一个函数
在这个函数里面定义好比较的规则，然后使用usort来调用
给出一个简单的示例
function compare($x, $y){
	if($x[1] == $y[1]){
		return 0;
	}else if($x[1]<$y[1]){
		return -1;
	}else{
		return 1;
	}
}

调用的时候是这样写的：
usort($products, 'compare');
说明，由于usort函数只有一个，没有对应的相反的函数，所以需要反向比较，就要把compare函数再做一个，如reverse_compare
function reverse_compare($x, $y){
	if($x[2] == $y[2]){
		return 0;
	}else if($x[2] < $y[2]){
		return 1;
	}else{
		return -1;
	}
}
这个写出来的就是按照降序排了
usort($products, 'reverse_compare');

重复执行某个操作到数组的每个元素的函数array_walk();

统计数组函数
count(),sizeof(),array_count_values()
最后一个函数以前没有注意到
这个函数可以分别统计数组里面的值出现的次数，呵呵，这个功能比较好。

extract()函数，以前看到过，但是从来没有仔细去看过它是做什么，只是大概知道。

extract()函数的后面参数，特别是第2和3个
可以设置不一样的使用方法
p106

现在可以学习第四章，字符串

字符串输出函数，printf("Total amount of order is %.2f.",$total);

很少这样使用，其实作用蛮大的。

还有字母大小写转换函数：strtoupper(),strtolower(),ucfirst(),ucwords()
strtoupper()函数就是把字符串变成大写
strtolower()正好相反，将字符串变成小写
ucfirst()函数，顾名思义，就是把字符串的第一个字母变成大写
ucwords()函数，也是同理，将单词的第一个字母变成大写

字符串格式化函数：addslashes()和stripslashes()
addslashes()函数，就是把字符串加上转义符
stripslashes()函数，正好相反，是去除转义符

php.ini其中有一项配置，magic_quotes_gpc就是管理系统自动转义的操作，如果magic_quotes_gpc启用，则用户提交的数据会自动转义的，这个时候要输出用户数据，就要使用去除转义函数stripslashes();
magic_quotes_gpc也叫魔术引号，这个参数启用时，影响对应的$_GET,$_POST,$_COOKIE.

说到正则表达式，这个一直是我比较薄弱的地方，应该要加强这方面的练习

关于正则表达式的几点，就是在POSIX正则表达式中，用于方括号外面特殊字符的摘要和用于方括号里面的特殊字符的摘要比较重要，他们在p123
现在又进一步了解了正则表达式。

ereg()函数和eregi()函数

正则的字符串替换函数：
str_replace(),eregi_replace()

split()函数就是正则表达式的分隔函数

同样功能，字符串效率要优先于正则表达式；但是如果使用一个正则表达式能够代替多次字符串操作是可行的
p126


第五章 代码重用和函数

include()和require()

还有include_once()和require_once()

执行的时候，后面两个要慢一些，但是后面两个避免了函数的重复加载




函数的定义不区分大小写，但是调用是

$name(),这个是正确的写法，因为可能存在
$name='abc';
原理是，php脚本会先找到$name这个变量的值，然后找带这个值对应的函数


函数的作用域

函数递归调用
注意：在很多情况下，递归可以使用循环来代替，因为递归比循环慢而且占用更多内存。

名称空间

p147

第六章 面向对象

重新学习面向对象

类的设计
p161

13号

继续学习面向对象

类的设计

大部分能够理解，但是还是有很多地方不理解，没有关系，继续往下。

p176

第七章 错误和异常处理

重新认识了对于程序代码错误的异常处理方式，可以直接继承原来的异常处理类
Exception

定义自己的方法

p185

第二篇 使用mysql

第八章 设计web数据库

重新了解了，数据库设计的原则：原子列值

设计过程中应该保持避免保存冗余数据
 避免空间的浪费
 数据更新不一致
 删除不规则（当删除某个记录时，不会把以后还需要的数据删除）
 避免多个空属性的设计(防止其他人不清楚，是程序错误还是没有插入值或者根本不会有此值)

 p194

第九章 创建web数据库

数据库用户的权限，应该以最少权限为主
尽量不要给过多权限

数据库中字段的类型，以及取值范围


p212

第十章 使用mysql数据库

通用数据库记录操作

p230

第十一章 使用php从web访问mysql数据库

学习了常规操作

p245

第十二章 mysql高级管理

比较多的资料，数据库优化之类的

p264
4-19
第十三章 mysql高级编程

学习关于mysql的存储引擎
事务
外键
存储过程

load data infile "newdata.txt" into table abc
执行这个命令，用户必须有file权限

学习了存储过程
可以定义存储过程，也可以定义内置函数

定义存储过程：
create procedure total_orders(out total float)

其中，out参数，表示该参数将被传出或返回
也可以是in，表示必须传入到存储过程
也是可以inout，表示该值必须传入但是可以被存储过程修改

float是参数的类型
可接受的数据类型

完整定义写法

delimiter //

create procedure total_orders(out total float)
BEGIN
     select sum(amount) into total from orders;
END
//

delimiter ;

存储过程的调用方法
call total_orders(@t);

查看结果：
select @t;

创建函数方法与创建存储过程差不多

函数接收输入参数并且返回一个唯一值。

函数的定义方法：

delimiter //

create function add_tax (price float) returns float
return price*1.1;
//

delimiter ;

函数的定义方法跟存储过程还是有区别的

不需要使用BEGIN和END语句块（但是可以使用），同时定义类型也有区别。

返回值通过，return语句

函数的调用方法，就像使用原有函数一样
select add_tax(100);

如果需要显示过程和函数，可以使用show语句

show create proceduare total_orders;

show create function add_tax;

删除他们可以使用
drop语句

drop proceduare total_orders;

drop function add_tax;

在过程中，可以使用declare语句定义局部变量

delimiter //

create function add_tax (price float) returns float
begin
     declare tax float default 0.10;
     return price*(1+tax);
end
//
delimiter ;

下面定义一个查找最大订单并且返回订单id的过程

# Procedure to find the orderid with the largest amount 
#could be done with max,but just to illustrate stored procedure principles

delimiter //

create procedure largest_order(out largest_id int)
begin
     declare this_id int;
     declare this_amout float;
     declare l_amount float default 0.0;
     declare l_id int;

     declare done int default 0;
     declare continue handler for sqlstate '02000' set done = 1;
     declare c1 cursor for select orderid,amount from orders;

     open c1;
     repeat
	fetch c1 into this_id,this_amount;
	if not done then
	   if this_amount > l_amount then
	      set 1_amount=this_amount;
	      set l_id=this_id;
	   end if
	end if
     until done end repeat;
     close c1;

     set largest_id=l_id;

end 
//

delimiter;

p273

4-20

继续存储过程

其中
repeat
……
until done end repeat;

是循环体，只有在循环语句结束时才检查循环条件

类似的循环语句还有
while condition do
……
end while;

还有loop循环语句

loop
……
end loop
这些循环没有内置的循环条件，但是可以通过leave语句退出循环。
请注意，存储过程不支持for循环。
存储过程中还有条件语句
if……then
还有
if condition then
...
[else]
...
end if
或者
if condition then 
...
[elseif condition then]
...
end if
此外，也可以使用case语句，如下
case value
	when value then statement
	[when value then statement ...]
	[else statement]
end case

第三篇 电子商务与安全性

第14章 运营一个电子商务网站

网站运营的概述

p285

第15章 电子商务的安全问题

电子商务的安全，从多个方面讨论

p300

4-23

第16章 web应用的安全

非常实用的多个方面和角度解析安全问题
其中，包括常见的服务器安全，代码安全，数据库安全，灾难性快速恢复机制

p322

第17章 使用php和mysql实现身份验证

使用初步的方式，表单验证，服务器访问验证，apache控制验证等方式

p337


第18章 使用php和mysql实现安全事务

重点讲解ssl，还有安全加密的其他方式：pgp（商业版）和gpg（免费版）

p346


第三篇 php的高级技术

第19章 与文件系统和服务器的交互

介绍php的文件，目录操作函数，还有服务器相关的操作函数


p370


第20章 使用网络函数和协议函数

parse_url($url)
邮件操作和ftp
同时介绍了邮件地址的验证，域名的验证
gethostbyname()
gethostbyaddr()

dns_get_mx($emailhost,$mxhostsarr)
检查是否存在邮件服务器地址
也可以使用
checkdnsrr()函数

p385

第21章 日期和时间的管理

php与mysql的时间格式不一致，
mysql两个关于转化时间的函数
DATE_FORMAT()
UNIX_TIMESTAMP()

p396

第22章 创建图像

创建图像的一些操作函数

p417

第23章 在php中使用会话控制

介绍会话的两种方式：
cookies和session

p429

第24章 其他有用的特性

函数eval

中断执行：die和exit
序列化变量和对象
serialize
unserialize
暂时改变运行时环境
ini_set()
加亮源代码
show_source()
highlight_file()
在命令行中使用php

p435

第五篇 创建实用的php和mysql项目

第25章 在大型项目中使用php和mysql

介绍web项目管理
开发过程的一些规划和管理
非常实用，后面再来学习哈
同时还有代码检查，测试等
p446

4-24

第26章 调试

编程语法，运行时以及逻辑错误
出错信息
错误级别
触发自定义错误
巧妙地处理错误

set_error_handler();
function myErrorHandler($errno,$errstr,$errfile,$errline){
	//处理错误
}

set_error_handler('myErrorHandler');


p462


第27章 建立用户身份验证机制和个性化设置

一个完整的小项目
比较好
$new_password=get_random_word(6,13);

$rand_number=rand(0,999);
$new_password.=$rand_number;

p484

4-25

继续学习

其中一个子查询不错，这个也是我的缺陷

先写下来吧

select bm_URL
from bookmark
where username in
(select distinct(b2.username)
from bookmark b1,bookmark b2
where b1.usernam='".$valid_user."'
and b1.username!=b2.username
and b1.bm_URL=b2.bm_URL)
and bm_URL not in
(select bm_URL
from bookmark
where username='".$valid_user."')
group by bm_URL
having count(bm_URL)>".$popularity;

p493

第28章 创建一个购物车


需要的功能：
在线出售商品的数据库
一个在线产品目录，按商品种类分类
一个能记录用户打算购买商品的购物车
结账脚本，处理付款和运送细节
一个管理界面

