阅读提要
本书围绕如何构建高性能web站点，包括数据的网络传输、服务器并发处理能力、动态网页缓存、动态网页静态化、应用层数据缓存、分布式缓存、web服务器缓存、反向代理缓存、脚本解释速度、页面组件分离、浏览器本地缓存、浏览器并发请求、文件的分发、数据库I/O优化、数据库访问、数据库分布式设计、负载均衡、分布式文件系统、性能监控等。

第11章 数据库性能优化

p248

1、查询数据库当前实时状态
show status;
show innodb status;

还有更好的第三方工具
mysqlreport
比前面两个工具显示友好一些


2、正确使用索引
@@在一条语句中只能使用一个索引方式


如果建立索引，根据情况分析决定
explain可以辅助分析

explain对update语句无效，当然可以把upadte语句暂时改成select来优化也是可以的

索引对应使用模糊查询的字段是无效的，如like '%内容'

3、使用组合索引

当需要查询的字段是多个，并且在where或者order by或者group by上面，就可以考虑使用组合索引

组合索引还有一个基本原则“最左前缀”

但是有些非顺序的索引类型（如hash）,对order by 是无效的

如果我们组合索引是：key1，key2，key3

那么如下则不能完全使用组合索引

select * from key_t where key1=123 order by key3;

select * from key_t where key1=123 group by key3;

如果没有建立其他索引，那么下面的也会应用到刚才的组合索引

select * from key_t where key2=123 limit 10;

但是这个语句在数据库引擎是innodb的时候特别的慢，如果是myisam要好得多

但是当我们在这个语句后面加上order by id（id是主键）就不一样了

p260

